#!/usr/bin/env python3

import argparse
#try:
#	import tools.addons.update
#	import tools.addons.winpcap

#except ImportError:
#	print("Failed import some modules!")

def main():

	# Parse args
	parser = argparse.ArgumentParser()
	parser.add_argument("--target", type = str, metavar = "<IP:PORT, URL, PHONE>",
					help = "Target IP:port, URL or phone.")
	parser.add_argument("--method", type = str, metavar = "[SMS|NTP|TCP|UDP|SYN|POD|SLOWLORIS|MEMCACHED|HTTP|NJRAT]",
					help = "Attack method.")
	parser.add_argument("--time", type = int, default = 10, metavar = "<time>",
					help = 'Time in secounds.')
	parser.add_argument("--threads", type = int, default = 3, metavar = "<threads>",
					help = "Threads count.")
	parser.add_argument("-u", "--update", action='store_true', dest="update", help = "Update Quack Toolkit.")
	
	# Get args
	args = parser.parse_args()
	threads = args.threads
	time = args.time
	method = str(args.method).upper()
	target = args.target

	if method == "NTP":
		import tools.addons.clean
		import tools.addons.logo
		from tools.L4.ntp import NTP_ATTACK
		NTP_ATTACK(threads, time, target)
		
	elif args.update:
		import os
		os.system("chmod +x bin/quack && bin/quack -u")
		sys.exit()

	elif method == "SYN":
		import tools.addons.clean
		import tools.addons.logo
		from tools.L4.syn import SYN_ATTACK
		SYN_ATTACK(threads, time, target)

	elif method == "TCP":
		import tools.addons.clean
		import tools.addons.logo
		from tools.L4.tcp import TCP_ATTACK
		TCP_ATTACK(threads, time, target)

	elif method == "POD":
		import tools.addons.clean
		import tools.addons.logo
		from tools.L4.pod import POD_ATTACK
		POD_ATTACK(threads, time, target)

	elif method == "NJRAT":
		import tools.addons.clean
		import tools.addons.logo
		from tools.L4.njrat import NJRAT_ATTACK
		NJRAT_ATTACK(threads, time, target)

	elif method == "UDP":
		import tools.addons.clean
		import tools.addons.logo
		from tools.L4.udp import UDP_ATTACK
		UDP_ATTACK(threads, time, target)

	elif method == "HTTP":
		import tools.addons.clean
		import tools.addons.logo
		from tools.L7.http import HTTP_ATTACK
		HTTP_ATTACK(threads, time, target)

	elif method == "SLOWLORIS":
		import tools.addons.clean
		import tools.addons.logo
		from tools.L7.slowloris import SLOWLORIS_ATTACK
		SLOWLORIS_ATTACK(threads, time, target)
	
	elif method == "MEMCACHED":
		import tools.addons.clean	
		import tools.addons.logo
		from tools.L4.memcached import MEMCACHED_ATTACK
		MEMCACHED_ATTACK(threads, time, target)

	elif method == "SMS":
		import tools.addons.clean
		import tools.addons.logo
		from tools.SMS.main import SMS_ATTACK
		SMS_ATTACK(threads, time, target)

	else:
		parser.print_help()

if __name__ == '__main__':
	main()
